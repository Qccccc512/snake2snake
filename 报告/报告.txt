报告
贪吃蛇对战游戏需求分析报告
项目介绍
游戏简介
本项目是一款基于HTML5开发的桌面端贪吃蛇对战游戏。游戏支持双人对战和人机对战两种模式，在32×32的固定地图上展开激烈竞技。玩家需要通过控制蛇的移动方向来收集豆子、增长蛇身、累积分数，并在2分钟的限时内获得更多得分赢得胜利。游戏加入了多种特殊豆子机制和成就系统，为玩家带来丰富的游戏体验。
主要内容
1. 平台与技术
•目标平台：桌面端。采用响应式设计适配不同屏幕尺寸
•技术栈：基于HTML5开发，无特定技术限制
2. 核心玩法
•地图：32×32固定方块地图，单屏无滚动
•模式切换：
￮速度设置：设定蛇的移动速度（每秒移动的格数）
￮双人对战：玩家1（WASD控制）vs 玩家2（方向键控制）
￮单人AI对战：玩家（WASD控制）vs AI（系统自动控制）
▪AI难度选择：简单/普通/困难
•胜负规则：
￮2分钟倒计时结束时，得分最高者获胜
￮平局条件：倒计时结束时两条蛇得分相同
3. 蛇与豆子机制
•初始状态：蛇初始长度为3节
•豆子刷新：每秒刷新2颗，全场最多存在20颗（支持通过配置接口修改刷新速率和数量上限）
•吃豆效果：
￮普通豆子（刷新概率80%）：吃豆后蛇身长度+1
￮特殊豆子（各类概率5%）：
▪加速豆子：移速翻倍（仅作用于当前蛇，持续效果）
▪超级豆子：累积吃豆数+5，蛇身长度只+1
▪地雷：碰到立刻死亡
▪磁铁豆子：触碰后在后续20秒内可以吸取头部为中心的九宫格范围内所有豆子并得分
￮特殊豆子概率支持通过配置接口修改
•得分：累积吃豆数×50+蛇身长度×100
•死亡与重生：
￮死亡触发条件：撞墙、撞自身、对撞（双方同步死亡）
￮死亡掉落：死亡后每3节身体掉落1颗豆子（下取整），全图随机散落，无消失时间
￮重生规则：2秒后复活，恢复初始长度（3节），优先在安全区域重生；若随机策略失败则按预设安全点回退，确保不会在其他蛇身上复活。
4. 用户系统与数据持久化
•用户注册与管理：玩家需要创建用户账号以开始游戏
•单人模式：选择一个用户与AI对战，数据在该用户账号上累积
•双人模式：选择两个用户分别操控玩家1和玩家2，数据各自独立累积
•本地存储：用户数据（统计、成就）持久化保存在浏览器localStorage中
•多用户支持：可创建、切换、删除多个用户账号
5. 成就系统
•成就类型：
￮跨局累积成就：基于用户长期累积数据触发（如累积移动距离、累积吃豆数等）
￮单局成就：基于单次游戏内表现触发（如单局最大长度、单局不死亡等）
•成就查看：可查看已解锁成就、未解锁成就及完成进度
•成就通知：解锁成就时在游戏内实时显示通知
•具体成就列表：
￮跨局累积成就：
▪远行者系列：累积移动100/300/1000/3000/10000格
▪美食家系列：累积吃豆50/100/300/500/1000/3000颗
▪特殊美食系列：累积吃加速/超级/磁铁豆各10/30/50/100颗
▪拆弹专家：累积触碰地雷10/30/50次
▪不屈者系列：累积死亡10/30/50/100次
▪对决大师：累积对撞5/10/20/50次
▪自省者：累积撞自己5/10/20/50次
▪资深玩家：完成游戏局数10/30/50/100/300局
▪胜利之星：累积获胜10/30/50/100局
▪速度狂人：累积处于加速状态1000/3000/5000秒
￮单局成就：
▪大胃王：单局吃豆20/30/40/50颗
▪巨蟒：单局最大长度20/30/40/50节
▪完美生存：单局不死亡且获胜
▪特殊美食家：单局吃特定类型豆子5/10/15个
▪幸存者：单局死亡后重生并逆转获胜
▪马拉松选手：单局移动距离500/1000/1500格
▪闪电战：开局60秒内达到15节长度
▪地雷清除者：单局触碰5个地雷后仍存活
▪磁力大师：单局通过磁铁效果吸取30颗豆子
▪完美压制：单局全程保持分数领先且获胜
6. UI与显示
•实时显示：每个玩家的分数（基于当前蛇长）和倒计时，位置在屏幕上方
•开始游戏：进入游戏对局，计时器启动
•暂停/继续：暂停或继续对局，计时器同步暂停或继续
•重置游戏：重置游戏至未开始的状态，计时器也重置回2分钟
•游戏指南：介绍游戏玩法和操作方式

需求分析与用例建模
以下内容对游戏的主要系统进行需求分析与usecase建模。其他系统将在后续的项目开发中按需逐步添加。
系统边界
本系统的边界包含以下功能模块：
•用户管理模块：用户创建、删除、选择、数据持久化
•游戏设置模块：游戏模式选择、速度设置、AI难度选择
•游戏控制模块：游戏的开始、暂停/继续、重置、玩家控制和AI控制
•游戏核心逻辑模块：游戏主循环、吃豆机制、死亡与重生处理、特殊豆子效果、系统自动行为（豆子刷新、碰撞检测、分数更新等）
•信息查看模块：实时信息显示、成就系统、游戏指南
•成就系统模块：成就检测、解锁通知、进度追踪、数据持久化
•数据持久化模块：用户数据存储、成就保存、统计数据累积
系统边界外的部分：
•网络功能（当前为本地游戏）
•音效和背景音乐
•地图编辑器
参与者
本系统的主要参与者为：
•玩家（Player）：游戏的主要使用者，可以进行游戏设置、控制蛇的移动、查看信息等操作。在双人模式下有玩家1和玩家2两个角色，但在用例建模中统一视为"玩家"这一参与者。
主要用例
系统包含以下主要用例，按功能模块分类：
用户管理（4个用例）
•UC0-1 - 创建用户：玩家创建新的用户账号
•UC0-2 - 选择用户：玩家选择一个或多个用户账号进入游戏
•UC0-3 - 删除用户：玩家删除已有的用户账号
•UC0-4 - 查看用户信息：玩家查看用户的统计数据和成就
游戏设置（3个用例）
•UC1 - 选择游戏模式：玩家选择双人对战或单人AI对战模式
•UC2 - 设置游戏速度：玩家设定蛇的移动速度（每秒移动的格数）
•UC3 - 选择AI难度：在AI对战模式下选择简单/普通/困难难度
游戏控制（5个用例）
•UC4 - 开始游戏：玩家触发游戏开始，进入游戏对局
•UC5 - 暂停/继续游戏：玩家操作暂停或继续游戏
•UC6 - 重置游戏：玩家触发游戏重置，重置游戏状态至初始：
￮计时器回2分钟
￮蛇恢复初始长度与位置 
￮清空地图上的豆子
￮重置后为未开始的状态，需要再次触发开始游戏以进行对局
￮重置基于单局数据的成就进度，但不影响已达成的成就和跨局累积数据的成就。
•UC7 - 控制蛇移动：玩家通过WASD或方向键控制蛇的移动
•UC22 - AI控制蛇移动：系统在AI模式下自动控制AI蛇的移动，根据难度级别（简单/普通/困难）执行不同的策略。
游戏核心逻辑（11个用例）
•UC8 - 游戏进行：核心游戏循环，包括：
￮2分钟倒计时
￮胜负判定
￮调用子用例处理具体逻辑
•UC9 - 吃豆子：蛇吃到豆子后的处理逻辑
￮基础行为：吃普通豆子
▪蛇身长度+1
▪累积吃豆数+1
￮特殊情况通过扩展用例处理
￮触发更新分数
•UC10 - 处理死亡与重生事件：处理蛇的死亡和重生
￮死亡触发：撞墙/撞自身/对撞/触碰地雷
￮2秒后重生，恢复初始长度3节
￮随机位置重生
•UC11 - 加速效果：加速豆子触发的速度翻倍效果
•UC12 - 超级豆子效果：超级豆子的特殊效果。累积吃豆数+5，蛇身长度只+1。
•UC13 - 触碰地雷：触碰地雷导致立刻死亡
•UC14 - 磁铁吸取效果：磁铁豆子的吸取效果，触碰后20秒内吸取头部九宫格范围内所有豆子。
•UC18 - 豆子刷新：系统自动刷新豆子
￮每秒刷新2颗豆子
￮全场最多存在20颗
￮包括普通豆子（80%）和特殊豆子（加速/超级/地雷/磁铁各5%）
￮支持通过配置接口修改刷新速率、数量上限和概率分布
•UC19 - 碰撞检测：系统持续检测碰撞条件
￮撞墙
￮撞自身
￮对撞（双方均死亡）
•UC20 - 更新分数：系统根据规则（累积吃豆数×50 + 蛇身长度×100）更新分数
•UC21 - 死亡掉落豆子：死亡后掉落豆子。
￮每3节身体掉落1颗豆子（下取整）
￮全图随机散落
信息查看（5个用例）
•UC15 - 显示实时信息：系统自动显示分数、倒计时、蛇长等信息
•UC16 - 查看成就系统：玩家查看成就完成情况及完成条件
•UC16-1 - 查看已解锁成就：玩家查看已完成的成就列表
•UC16-2 - 查看成就进度：玩家查看未完成成就的当前进度
•UC16-3 - 成就解锁通知：系统在玩家解锁成就时显示通知
•UC17 - 查看游戏指南：玩家查看游戏玩法和操作说明
用例图
用例图采用4大包结构组织，清晰展示了玩家行为与系统行为的区分。完整的用例图见文件 snake_usecase.puml。

关键关系说明：
•包含关系（include）：表示必须执行的子用例，如"游戏进行"必须包含"豆子刷新"、"碰撞检测"等系统行为
•扩展关系（extend）：表示可选的扩展情况，如"吃豆子"可能扩展为各种特殊豆子效果
用例说明
以下详细说明几个核心用例的具体流程：
UC8 - 游戏进行
项目	内容
用例编号	UC8
用例名称	游戏进行
参与者	玩家、系统
前置条件	玩家已完成游戏设置并触发开始游戏
后置条件	游戏结束，显示胜负结果
包含用例	UC7控制蛇移动、UC22 AI控制蛇移动、UC15显示实时信息、UC18豆子刷新、UC19碰撞检测、UC9吃豆子
扩展用例	UC10处理死亡与重生事件
基本流程	1. 系统初始化游戏状态（2分钟倒计时、双方蛇初始位置和长度），启动游戏主循环
2. 显示实时信息（UC15）
3. 系统执行豆子刷新（UC18）
4. 玩家控制蛇移动（UC7）或AI控制蛇移动（UC22）
5. 系统执行碰撞检测（UC19）
6. 系统处理吃豆逻辑（UC9）
7. 系统更新并显示实时信息（UC15）
8. 重复步骤3-7直到倒计时结束
9. 系统判定胜负（蛇身最长者获胜）
10. 系统显示游戏结果
扩展流程	5a. 蛇发生碰撞（撞墙/撞自身/对撞）
    5a1. 系统触发死亡与重生处理（UC10）
    5a2. 返回步骤6继续游戏
备注	这是系统的核心用例，协调所有游戏逻辑的执行

UC9 - 吃豆子
项目	内容
用例编号	UC9
用例名称	吃豆子
参与者	系统
前置条件	游戏正在进行中，蛇头位置与豆子位置重合
后置条件	豆子被消耗，蛇身长度改变，分数更新
包含用例	UC20更新分数
扩展用例	UC11加速效果、UC12超级豆子效果、UC13触碰地雷、UC14磁铁吸取效果
基本流程	1. 系统检测到蛇头与普通豆子位置重合
2. 系统移除该豆子
3. 系统使蛇身长度+1
4. 系统使累积吃豆数+1
5. 系统触发更新分数（UC20）
扩展流程	1a. 蛇头与加速豆子重合
    1a1. 触发加速效果（UC11）
    1a2. 执行步骤2-5
1b. 蛇头与超级豆子重合
    1b1. 执行步骤2
    1b2. 触发超级豆子效果（UC12）
    1b3. 执行步骤5
1c. 蛇头与地雷重合
    1c1. 触发地雷效果（UC13），蛇立即死亡
    1c2. 触发处理死亡与重生事件（UC10）
1d. 蛇头与磁铁豆子重合
    1d1. 触发磁铁吸取效果（UC14）
    1d2. 执行步骤2-5
备注	基础行为是吃普通豆子，特殊豆子通过扩展关系处理

UC10 - 处理死亡与重生事件
项目	内容
用例编号	UC10
用例名称	处理死亡与重生事件
参与者	系统
前置条件	蛇发生碰撞（撞墙/撞自身/对撞），或遇到地雷
后置条件	蛇在新位置重生，掉落的豆子出现在地图上
包含用例	UC20更新分数、UC21死亡掉落豆子
基本流程	1. 系统检测到蛇发生碰撞
2. 系统标记该蛇为死亡状态
3. 系统执行死亡掉落豆子（UC21）
4. 系统更新分数（UC20）
5. 系统启动2秒重生计时器
6. 2秒后系统在随机安全位置生成该蛇；若随机策略多次失败，系统按预设安全坐标回退，仍确保不与其他蛇重叠
7. 系统将蛇长度重置为3节（初始长度）
8. 系统标记该蛇为存活状态
特殊流程	1a. 双人对撞
    1a1. 系统同时标记两条蛇为死亡状态
    1a2. 对两条蛇分别执行步骤3-8
备注	死亡不会导致游戏结束，2秒后会重生继续游戏

UC18 - 豆子刷新
项目	内容
用例编号	UC18
用例名称	豆子刷新
参与者	系统
前置条件	游戏正在进行中
后置条件	地图上新增若干豆子
基本流程	1. 系统检查当前地图上豆子总数
2. 如果豆子总数小于20，则继续
3. 系统每秒生成2颗豆子
4. 系统根据概率确定豆子类型（普通豆子80%、加速/超级/地雷/磁铁各5%）
5. 系统在地图上随机空位置放置这些豆子
6. 重复执行直到游戏结束
备注	这是系统自动执行的行为，全场最多存在20颗豆子

UC19 - 碰撞检测
项目	内容
用例编号	UC19
用例名称	碰撞检测
参与者	系统
前置条件	游戏正在进行中
后置条件	如果发生碰撞则触发相应处理
基本流程	1. 系统获取所有蛇的当前位置
2. 系统检测蛇头是否超出地图边界（撞墙）
3. 系统检测蛇头是否与自身身体重合（撞自身）
4. 系统检测两条蛇的蛇头是否重合（对撞）
5. 如果检测到碰撞，触发处理死亡与重生事件（UC10）
6. 持续执行直到游戏结束
备注	这是系统在游戏循环中持续执行的行为

UC20 - 更新分数
项目	内容
用例编号	UC20
用例名称	更新分数
参与者	系统
前置条件	蛇的状态发生变化（吃豆或死亡重生）
后置条件	玩家分数更新并显示
基本流程	1. 系统获取玩家的累积吃豆数
2. 系统获取玩家的蛇身长度
3. 系统根据公式计算分数：累积吃豆数×50 + 蛇身长度×100
4. 系统更新玩家分数显示
备注	这是系统的核心计分规则，由多个用例触发
